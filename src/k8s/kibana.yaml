apiVersion: v1
kind: ConfigMap
metadata:
  namespace: logging
  name: kibana-config
data:
  kibana.yml: |-
    server.host: 0.0.0.0
    # server.ssl.certificate: /usr/share/kibana/config/certs/elastic-certificates.pem
    # server.ssl.key: /usr/share/kibana/config/certs/elastic-certificates-key.pem
    # xpack.security.enabled: true
    elasticsearch.ssl.verificationMode: "none"
    monitoring.ui.ccs.enabled: false
    elasticsearch:
      hosts: ${ELASTICSEARCH_URL}
      username: ${ELASTICSEARCH_USER}
      password: ${ELASTICSEARCH_PASSWORD}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: logging
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.7.1
          imagePullPolicy: "IfNotPresent"
          env:
            - name: ELASTICSEARCH_URL
              value: "https://es-client:9200"
            - name: ELASTICSEARCH_USER
              value: "kibana_system"
            - name: ELASTICSEARCH_PASSWORD
              value: "YOUR_KIBANA_SYSTEM_USER_PASSWORD"
          resources:
            limits:
              cpu: 1000m
              memory: "4Gi"
            requests:
              cpu: 500m
              memory: "2Gi"
          ports:
            - containerPort: 5601
              name: kibana
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /usr/share/kibana/config/kibana.yml
              # readOnly: true
              subPath: kibana.yml
            - name: storage
              mountPath: /data
            - name: certs
              mountPath: /usr/share/kibana/config/certs
      volumes:
        - name: config
          configMap:
            name: kibana-config
        - name: "storage"
          emptyDir:
            medium: ""
        - name: certs
          secret:
            secretName: elasticsearch-certs
      initContainers:
        - name: increase-vm-max-map
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
            runAsUser: 0

---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: logging
  labels:
    app: kibana
spec:
  ports:
    - port: 80
      targetPort: 5601
  selector:
    app: kibana
  type: LoadBalancer
