kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: elk-azurefile-sc
provisioner: file.csi.azure.com # replace with "kubernetes.io/azure-file" if aks version is less than 1.21
allowVolumeExpansion: true
mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=0
  - gid=0
  - mfsymlinks
  - cache=strict
  - actimeo=30
parameters:
  skuName: Standard_LRS

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: elk-azurefile-pv
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: elk-azurefile-sc
  csi:
    driver: file.csi.azure.com
    readOnly: false
    volumeHandle: /subscriptions/{SubscriptIonId}/resourceGroups/{InfraResource Group}/providers/Microsoft.Compute/disks/myAKSDisk # unique-volumeid_elk_cluster  # make sure this volumeid is unique for every identical share in the cluster
    volumeAttributes:
      resourceGroup: resourceGroupName # optional, only set this when storage account is not in the same resource group as node
      shareName: aksshare
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - uid=0
    - gid=0
    - mfsymlinks
    - cache=strict
    - nosharesock
    - nobrl

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elk-azurefile-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: elk-azurefile-sc
  volumeName: elk-azurefile-pv
  resources:
    requests:
      storage: 5Gi
